apiVersion: application.kubero.dev/v1alpha1
kind: KuberoApp
metadata:
  creationTimestamp: "2023-02-09T08:44:47Z"
  finalizers:
  - helm.sdk.operatorframework.io/uninstall-release
  generation: 13
  labels:
    manager: kubero
  name: sonarr
  namespace: test-test
  resourceVersion: "5518338"
  uid: b4601373-67c1-4447-aa30-19020e20330d
spec:
  addons: []
  affinity: {}
  autodeploy: true
  autoscale: false
  autoscaling:
    enabled: false
  branch: main
  cronjobs: []
  deploymentstrategy: docker
  domain: sonarr.lacolhost.com
  envVars:
  - name: PUID
    value: 911
  - name: GUID
    value: 911
  - name: TZ
    value: Europe/London
  extraVolumes:
  - accessModes:
    - ReadWriteOnce
    emptyDir: false
    mountPath: /config
    name: sonarr-config2-volume
    size: 1Gi
    storageClass: standard
  - accessModes:
    - ReadWriteOnce
    emptyDir: false
    mountPath: /tv
    name: sonarr-tv-volume
    size: 1Gi
    storageClass: standard
  - accessModes:
    - ReadWriteOnce
    emptyDir: false
    mountPath: /downloads
    name: example-downloads-volume
    size: 1Gi
    storageClass: standard
  fullnameOverride: ""
  gitrepo:
    admin: true
    clone_url: https://github.com/kubero-dev/template-nodeapp.git
    default_branch: main
    description: Simple example Node app
    homepage: ""
    id: 501665730
    language: JavaScript
    name: template-nodeapp
    node_id: R_kgDOHebPwg
    owner: kubero-dev
    private: false
    push: true
    ssh_url: git@github.com:kubero-dev/template-nodeapp.git
    visibility: public
  image:
    build:
      command: npm install
      repository: node
      tag: latest
    containerPort: "8989"
    fetch:
      repository: ghcr.io/kubero-dev/buildpacks/fetch
      tag: main
    pullPolicy: Always
    repository: lscr.io/linuxserver/sonarr
    run:
      command: node index.js
      repository: node
      securityContext:
        allowPrivilegeEscalation: true
        readOnlyRootFilesystem: false
      tag: latest
    tag: latest
  imagePullSecrets: []
  ingress:
    annotations: {}
    className: ""
    enabled: true
    hosts:
    - host: sonarr.lacolhost.com
      paths:
      - path: /
        pathType: ImplementationSpecific
    tls: []
  name: sonarr
  nameOverride: ""
  nodeSelector: {}
  phase: test
  pipeline: test
  podAnnotations: {}
  podSecurityContext: {}
  podsize:
    default: true
    description: 'Small (CPU: 0.25, Memory: 0.5Gi)'
    name: small
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 0.5Gi
  replicaCount: 1
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 0.5Gi
  service:
    port: 80
    type: ClusterIP
  serviceAccount:
    annotations: {}
    create: true
    name: ""
  tolerations: []
  web:
    autoscaling:
      maxReplicas: 3
      minReplicas: 1
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
    replicaCount: 1
  worker:
    autoscaling:
      maxReplicas: 0
      minReplicas: 0
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
    replicaCount: 0
status:
  conditions:
  - lastTransitionTime: "2023-02-09T08:44:47Z"
    status: "True"
    type: Initialized
  - lastTransitionTime: "2023-02-09T08:44:48Z"
    message: |
      1. Get the application URL by running these commands:
        http://sonarr.lacolhost.com/
    reason: UpgradeSuccessful
    status: "True"
    type: Deployed
  deployedRelease:
    manifest: |
      ---
      # Source: kuberoapp/templates/serviceaccount.yaml
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: sonarr-kuberoapp
        labels:
          helm.sh/chart: kuberoapp-0.1.0
          app.kubernetes.io/name: kuberoapp
          app.kubernetes.io/instance: sonarr
          app.kubernetes.io/version: "1.16.0"
          app.kubernetes.io/managed-by: Helm
      ---
      # Source: kuberoapp/templates/pvc.yaml
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: sonarr-config2-volume
      spec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      ---
      # Source: kuberoapp/templates/pvc.yaml
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: sonarr-tv-volume
      spec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      ---
      # Source: kuberoapp/templates/pvc.yaml
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: example-downloads-volume
      spec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      ---
      # Source: kuberoapp/templates/service.yaml
      apiVersion: v1
      kind: Service
      metadata:
        name: sonarr-kuberoapp
        labels:
          helm.sh/chart: kuberoapp-0.1.0
          app.kubernetes.io/name: kuberoapp
          app.kubernetes.io/instance: sonarr
          app.kubernetes.io/version: "1.16.0"
          app.kubernetes.io/managed-by: Helm
      spec:
        type: ClusterIP
        ports:
          - port: 80
            targetPort: http
            protocol: TCP
            name: http
        selector:
          app.kubernetes.io/name: kuberoapp
          app.kubernetes.io/instance: sonarr-web
      ---
      # Source: kuberoapp/templates/deployment-web.yaml
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: sonarr-kuberoapp-web
        labels:
          helm.sh/chart: kuberoapp-0.1.0
          app.kubernetes.io/name: kuberoapp
          app.kubernetes.io/instance: sonarr
          app.kubernetes.io/version: "1.16.0"
          app.kubernetes.io/managed-by: Helm
      spec:
        replicas: 1
        selector:
          matchLabels:
            app.kubernetes.io/name: kuberoapp
            app.kubernetes.io/instance: sonarr-web
        template:
          metadata:
            labels:
              app.kubernetes.io/name: kuberoapp
              app.kubernetes.io/instance: sonarr-web
          spec:
            serviceAccountName: sonarr-kuberoapp
            securityContext:
              {}
            containers:
              - name: kuberoapp-web
                securityContext:
                  allowPrivilegeEscalation: true
                  readOnlyRootFilesystem: false
                image: "lscr.io/linuxserver/sonarr:latest"
                imagePullPolicy: Always
                env:
                  - name: PROC_TYPE
                    value: web
                  - name: PORT
                    value: "8989"
                  - name: PUID
                    value: "911"
                  - name: GUID
                    value: "911"
                  - name: TZ
                    value: "Europe/London"
                ports:
                  - name: http
                    containerPort: 8989
                    protocol: TCP
                livenessProbe:
                  httpGet:
                    path: /
                    port: http
                readinessProbe:
                  httpGet:
                    path: /
                    port: http
                volumeMounts:
                  - mountPath: /tmp
                    name: tmp-storage
                    readOnly: false
                  - mountPath: /config
                    name: sonarr-config2-volume
                  - mountPath: /tv
                    name: sonarr-tv-volume
                  - mountPath: /downloads
                    name: example-downloads-volume
                resources:
                  limits:
                    cpu: 500m
                    memory: 1Gi
                  requests:
                    cpu: 250m
                    memory: 0.5Gi
            volumes:
            - name: deployment-keys
              secret:
                defaultMode: 0600
                secretName: deployment-keys
            - name: app-storage
              emptyDir: {}
            - name: tmp-storage
              emptyDir: {}
            - name: sonarr-config2-volume
              persistentVolumeClaim:
                claimName: sonarr-config2-volume
            - name: sonarr-tv-volume
              persistentVolumeClaim:
                claimName: sonarr-tv-volume
            - name: example-downloads-volume
              persistentVolumeClaim:
                claimName: example-downloads-volume
      ---
      # Source: kuberoapp/templates/deployment-worker.yaml
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: sonarr-kuberoapp-worker
        labels:
          helm.sh/chart: kuberoapp-0.1.0
          app.kubernetes.io/name: kuberoapp
          app.kubernetes.io/instance: sonarr
          app.kubernetes.io/version: "1.16.0"
          app.kubernetes.io/managed-by: Helm
      spec:
        replicas: 0
        selector:
          matchLabels:
            app.kubernetes.io/name: kuberoapp
            app.kubernetes.io/instance: sonarr-worker
        template:
          metadata:
            labels:
              app.kubernetes.io/name: kuberoapp
              app.kubernetes.io/instance: sonarr-worker
          spec:
            serviceAccountName: sonarr-kuberoapp
            securityContext:
              {}
            containers:
              - name: kuberoapp-worker
                securityContext:
                  allowPrivilegeEscalation: true
                  readOnlyRootFilesystem: false
                image: "lscr.io/linuxserver/sonarr:latest"
                imagePullPolicy: Always
                env:
                  - name: PROC_TYPE
                    value: worker
                  - name: PORT
                    value: "8989"
                  - name: PUID
                    value: "911"
                  - name: GUID
                    value: "911"
                  - name: TZ
                    value: "Europe/London"
                ports:
                  - name: http
                    containerPort: 8989
                    protocol: TCP
                volumeMounts:
                  - mountPath: /tmp
                    name: tmp-storage
                    readOnly: false
                  - mountPath: /config
                    name: sonarr-config2-volume
                  - mountPath: /tv
                    name: sonarr-tv-volume
                  - mountPath: /downloads
                    name: example-downloads-volume
                resources:
                  limits:
                    cpu: 500m
                    memory: 1Gi
                  requests:
                    cpu: 250m
                    memory: 0.5Gi
            volumes:
            - name: deployment-keys
              secret:
                defaultMode: 0600
                secretName: deployment-keys
            - name: app-storage
              emptyDir: {}
            - name: tmp-storage
              emptyDir: {}
            - name: sonarr-config2-volume
              persistentVolumeClaim:
                claimName: sonarr-config2-volume
            - name: sonarr-tv-volume
              persistentVolumeClaim:
                claimName: sonarr-tv-volume
            - name: example-downloads-volume
              persistentVolumeClaim:
                claimName: example-downloads-volume
      ---
      # Source: kuberoapp/templates/ingress.yaml
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: sonarr-kuberoapp
        labels:
          helm.sh/chart: kuberoapp-0.1.0
          app.kubernetes.io/name: kuberoapp
          app.kubernetes.io/instance: sonarr
          app.kubernetes.io/version: "1.16.0"
          app.kubernetes.io/managed-by: Helm
      spec:
        rules:
          - host: "sonarr.lacolhost.com"
            http:
              paths:
                - path: /
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: sonarr-kuberoapp
                      port:
                        number: 80
    name: sonarr
